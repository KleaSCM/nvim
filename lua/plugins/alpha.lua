return {
    "goolord/alpha-nvim",
    event = "VimEnter",
    dependencies = { "nvim-tree/nvim-web-devicons" },
    config = function()
        local alpha = require("alpha")
        local dashboard = require("alpha.themes.dashboard")

        -- Set header
        dashboard.section.header.val = {
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£æ‚†≥‚†∂‚£§‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£∂‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚°á‚†Ä‚†Ä‚£∏‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚†ü‚†Å‚†à‚¢ª‚£¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚†Ä‚¢†‚°ü‚†Ä‚†Ä‚†Ä‚¢†‚°æ‚†É‚†Ä‚†Ä‚£∞‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†õ‚†ì‚†æ‚†Å‚†Ä‚†Ä‚£∞‚†ü‚†Ä‚†Ä‚¢Ä‚°æ‚†ã‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚£Ä‚£†‚£§‚£§‚£§‚£Ñ‚£Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†≥‚£¶‚£¥‚†ü‚†Å‚†Ä‚†Ä‚£†‚°¥‚†ã‚†Ä‚†à‚¢∑‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£§‚£¥‚£∂‚£ø‚£ø‚£ø‚£ø‚°ø‚†ø‚†ø‚†ø‚†ø‚†ø‚†ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£¶‚£§‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°æ‚†ã‚†Ä‚†Ä‚¢Ä‚£¥‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚£∂‚£ø‚£ø‚°ø‚†ü‚†ã‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†ô‚†ª‚¢ø‚£ø‚£ø‚£∂‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†∫‚£è‚†Ä‚†Ä‚£Ä‚°¥‚†ü‚†Å‚¢Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£∂‚£ø‚£ø‚†ø‚†ã‚†Å‚†Ä‚¢Ä‚£¥‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∂‚£¨‚°ô‚†ø‚£ø‚£ø‚£∂‚£Ñ‚†Ä‚†Ä‚†ô‚¢∑‚°æ‚†ã‚¢Ä‚£§‚†æ‚†ã‚†ô‚¢∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£æ‚£ø‚°ø‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚¢†‚£æ‚°ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚£¶‚£†‚£§‚†Ω‚£ø‚£¶‚†à‚†ô‚¢ø‚£ø‚£∑‚£Ñ‚†Ä‚†Ä‚†Ä‚†∫‚£è‚†Å‚†Ä‚†Ä‚£Ä‚£º‚†ø‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£æ‚£ø‚°ø‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚£ø‚†ü‚†Ä‚†Ä‚†Ä‚¢†‚£§‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†â‚£ø‚£ß‚†Ä‚†Ä‚†à‚¢ø‚£∑‚£Ñ‚†Ä‚†ô‚¢ø‚£ø‚£∑‚£Ñ‚†Ä‚†Ä‚†ô‚£ß‚°¥‚†ü‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚£ø‚£ø‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∑‚£ø‚°ü‚†Ä‚£∞‚°Ü‚†Ä‚¢∏‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚°Ä‚†Ä‚£ø‚£ø‚°Ä‚†Ä‚†Ä‚†à‚¢ø‚£ø‚£¶‚†Ä‚†Ä‚†ô‚¢ø‚£ø‚£¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚£ø‚°ø‚†Å‚†Ä‚†¶‚£§‚£Ä‚†Ä‚†Ä‚¢Ä‚£ø‚£ø‚°á‚¢∞‚£ø‚†á‚†Ä‚¢∏‚£ø‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°á‚†Ä‚¢∏‚£ø‚£ø‚£Ü‚†Ä‚†Ä‚†à‚£ø‚£ø‚£ß‚£†‚£§‚†æ‚¢ø‚£ø‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚£ø‚£ø‚£µ‚£ø‚†Ä‚†Ä‚†Ä‚†â‚†Ä‚†Ä‚£º‚£ø‚¢ø‚°á‚£æ‚£ø‚†Ä‚†Ä‚£æ‚£ø‚°á‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°á‚†Ä‚£º‚£ø‚¢ª‚£ø‚£¶‚†¥‚†∂‚¢ø‚£ø‚£ø‚£á‚†Ä‚†Ä‚†Ä‚¢ª‚£ø‚£ß‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£ø‚£ø‚£ø‚£ø‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£ø‚°ü‚°å‚£º‚£ø‚£ø‚†â‚¢Å‚£ø‚£ø‚£∑‚£ø‚°ó‚†í‚†ö‚†õ‚†õ‚¢õ‚£ø‚£Ø‚£Ø‚£ø‚£ø‚†Ä‚¢ª‚£ø‚£ß‚†Ä‚¢∏‚£ø‚£ø‚£ø‚°Ñ‚†Ä‚†Ä‚†Ä‚†ô‚¢ø‚£ø‚£∑‚£§‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚°á‚£º‚£ø‚£ø‚£ø‚£∂‚£æ‚£ø‚£ø‚¢ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚†ü‚¢ª‚£ø‚£ø‚£ø‚£∂‚£ø‚£ø‚£ß‚¢∏‚£ø‚£ø‚£ø‚£ß‚†Ä‚†Ä‚†Ä‚¢∞‚£∑‚°à‚†õ‚¢ø‚£ø‚£ø‚£∂‚£¶‚£§‚£§‚£Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£§‚£æ‚£ø‚£ø‚¢´‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£π‚£ø‚†è‚¢π‚£ø‚£ø‚£ø‚£ø‚£ø‚£º‚£ø‚†É‚†Ä‚†Ä‚†Ä‚¢Ä‚£ø‚°ø‚¢Ä‚£ø‚£ø‚†ü‚†Ä‚†Ä‚†Ä‚†π‚£ø‚£ø‚£ø‚†á‚¢ø‚£ø‚°Ñ‚†Ä‚†Ä‚†à‚¢ø‚£ø‚£∑‚£∂‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø",
            "‚£¥‚£∂‚£∂‚£ø‚£ø‚£ø‚£ø‚£ã‚£¥‚£ø‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£ø‚£ø‚£ø‚£ü‚£¥‚†ü‚¢ø‚£ø‚†ü‚£ø‚£ø‚£ø‚£ø‚£∂‚£∂‚£∂‚£∂‚£æ‚£ø‚£ø‚£ø‚†ø‚£´‚£§‚£∂‚°Ü‚†Ä‚†Ä‚£ª‚£ø‚£ø‚£∂‚£∏‚£ø‚£∑‚°Ä‚†Ä‚†Ä‚†∏‚£ø‚£ø‚£ø‚°ü‚†õ‚†õ‚†õ‚†â‚†Å‚†Ä",
            "‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚¢ø‚£ø‚†ã‚†Ä‚¢†‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£Å‚£Ä‚£Ä‚£Å‚†Ä‚†Ä‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†∏‚¢ü‚£´‚£•‚£∂‚£ø‚£ø‚£ø‚†ø‚†ü‚†ã‚¢ª‚£ø‚°ü‚£á‚£†‚°§‚†Ä‚£ø‚£ø‚£ø‚£ø‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†â‚†â‚¢π‚£ø‚°á‚£æ‚£ø‚†Ä‚†Ä‚¢∏‚°Ü‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚°ü‚†ø‚†ø‚†ø‚†ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£¶‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£æ‚£ø‚£ø‚£ø‚£ø‚£Ø‚£•‚£§‚£Ñ‚£Ä‚°Ä‚¢∏‚£ø‚†á‚¢ø‚¢∏‚°á‚†Ä‚¢π‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£æ‚£ø‚°á‚£ø‚£ø‚†Ä‚†Ä‚†∏‚£ß‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚†Ä‚¢Ä‚£Ä‚£§‚£§‚£∂‚£æ‚£ø‚†ø‚†ü‚†õ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†â‚†ô‚†õ‚¢õ‚£õ‚†õ‚†õ‚†õ‚†É‚†∏‚£ø‚£Ü‚¢∏‚£ø‚£á‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚£ø‚°á‚¢ª‚£ø‚°Ñ‚†Ä‚†Ä‚£ø‚°Ñ‚†Ä‚¢∏‚£ø‚°∑‚¢æ‚£ø‚†ø‚†ü‚†õ‚†â‚†â‚†Ä‚†Ä‚†Ä‚¢†‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£∂‚†Ä‚†Ä‚¢Ä‚°æ‚†ã‚†Å‚¢†‚°Ñ‚†Ä‚£§‚†Ä‚¢π‚£ø‚£¶‚£ø‚°á‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£á‚¢∏‚£ø‚°á‚†Ä‚†Ä‚£ø‚£ß‚†Ä‚†à‚£ø‚£∑‚†Ä‚†Ä‚¢Ä‚£Ä‚†Ä‚¢ô‚£ß‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£ø‚°è‚†Ä‚†Ä‚†∏‚£á‚†Ä‚†Ä‚†ò‚†õ‚†ò‚†õ‚†Ä‚¢Ä‚£ø‚£ø‚£ø‚°á‚†Ä‚£º‚£ø‚¢ª‚£ø‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚£ø‚£ø‚£∏‚£ø‚£ø‚†Ä‚†Ä‚£ø‚£ø‚£Ü‚†Ä‚¢ø‚£ø‚°Ä‚†Ä‚†∏‚†ü‚†Ä‚†õ‚£ø‚†É‚†Ä‚†Ä‚¢∏‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†ô‚†∑‚£¶‚£Ñ‚°Ä‚†Ä‚¢Ä‚£¥‚£ø‚°ø‚£±‚£æ‚†Å‚†Ä‚£ø‚£ø‚£æ‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚£ø‚£ø‚£ø‚£ø‚£á‚†Ä‚¢ø‚¢π‚£ø‚£Ü‚¢∏‚£ø‚£ß‚£Ä‚†Ä‚†Ä‚†¥‚†û‚†Å‚†Ä‚†Ä‚†Ä‚†∏‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£®‚£Ω‚£æ‚£ø‚£ø‚°è‚¢Ä‚£ø‚£ø‚†Ä‚£∏‚£ø‚£ø‚£ø‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ª‚£ø‚£ø‚£ø‚£ø‚£Ü‚¢∏‚°è‚†ª‚£ø‚£¶‚£ø‚£ø‚£ø‚£ø‚£∂‚£¶‚£§‚£Ä‚£Ä‚£Ä‚£Ä‚†Ä‚£ø‚£∑‚†Ä‚†Ä‚†Ä‚£∏‚£ø‚£è‚£Ä‚£§‚£§‚£∂‚£æ‚£ø‚£ø‚£ø‚†ø‚†õ‚¢π‚£ø‚£ß‚£º‚£ø‚£ø‚£∞‚£ø‚£ø‚†õ‚†õ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†õ‚†ô‚£ø‚£ø‚£¶‚£∑‚†Ä‚¢ª‚£ø‚£ø‚£ø‚£ø‚°ù‚†õ‚†ª‚†ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ø‚†ü‚†õ‚†õ‚†â‚†Å‚†Ä‚†Ä‚†Ä‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ª‚£ø‚£ø‚£Ñ‚¢∏‚£ø‚£ø‚£ø‚£ø‚£∑‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†ø‚†ü‚†ª‚£ø‚°ø‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢ø‚£ø‚£ø‚£ø‚£ø‚°å‚†ô‚†õ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
            "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†õ‚†õ‚†õ‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
        }

        -- Set menu
        dashboard.section.buttons.val = {}
        local buttons = {
            { "e", "üìÑ New file", ":ene <BAR> startinsert <CR>" },
            { "f", "üîç Find file", ":Telescope find_files <CR>" },
            { "r", "üìö Recent files", ":Telescope oldfiles <CR>" },
            { "t", "üìù Find text", ":Telescope live_grep <CR>" },
            { "s", "üìú Scripts", ":lua require('plugins.scripts').show_script_prompt()<CR>" },
            { "c", "‚öôÔ∏è  Config", ":e $MYVIMRC <CR>" },
            { "q", "‚ùå Quit NVIM", ":qa<CR>" },
        }

        -- Add buttons one by one with error handling
        for _, btn in ipairs(buttons) do
            local button = dashboard.button(btn[1], btn[2], btn[3])
            table.insert(dashboard.section.buttons.val, button)
        end

        -- Set footer
        dashboard.section.footer.val = {
            "",
            "Welcome to Neovim!",
        }

        -- Configure layout
        dashboard.config.layout = {
            { type = "padding", val = 2 },
            dashboard.section.header,
            { type = "padding", val = 2 },
            dashboard.section.buttons,
            { type = "padding", val = 2 },
            dashboard.section.footer,
        }

        -- Send config to alpha
        alpha.setup(dashboard.opts)

        -- Disable folding on alpha buffer
        vim.cmd([[
            autocmd FileType alpha setlocal nofoldenable
        ]])

        -- Close all other windows when opening alpha
        vim.api.nvim_create_autocmd("User", {
            pattern = "AlphaReady",
            callback = function()
                vim.cmd("only")
            end,
        })

        -- Debug notification
        vim.notify("Alpha dashboard configured", vim.log.levels.INFO)
    end,
    priority = 1000,
} 